<?xml version="1.0" encoding="UTF-8"?>
<!-- status用来指定log4j本身的打印日志的级别.  monitorInterval
	用于指定log4j自动重新配置的监测间隔时间，单位是s,最小是5s.-->
	<!-- 打印等级：off、fatal、error、warn、info、debug、trace、all -->  
<configuration status="info" monitorInterval="30">
	<Properties>
        <Property name="logdir">/appDir/www/flybear/ssoa/logs</Property>
        <!-- <Property name="logdir">D:/www/author/logs</Property> -->
    </Properties>
	<appenders>
		<!-- Appenders节点，常见的有三种子节点:Console、RollingFile、File. -->
		<console name="Console" target="SYSTEM_OUT">
			<!-- Console节点用来定义输出到控制台的Appender. -->
			<!-- 输出格式 -->
			<PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
		</console>
		
		<!-- File节点用来定义输出到指定位置的文件的Appender.append设置是否添加 -->
		<File name="log" fileName="log/test.log" append="false">
			<PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
		</File>
		
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" fileName="${logdir}/app_author/info.log" 
        	filePattern="${logdir}/app_author/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
        	<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
        	<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
             <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
             <Policies>
                 <TimeBasedTriggeringPolicy/>
                 <SizeBasedTriggeringPolicy size="100 MB"/>
             </Policies>
         </RollingFile>
         <RollingFile name="RollingFileWarn" fileName="${logdir}/app_author/warn.log"
         		filePattern="${logdir}/app_author/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
             <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
             <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
             <Policies>
                 <TimeBasedTriggeringPolicy/>
                 <SizeBasedTriggeringPolicy size="100 MB"/>
             </Policies>
         <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
             <DefaultRolloverStrategy max="20"/>
         </RollingFile>
         <RollingFile name="RollingFileError" fileName="${logdir}/app_author/error.log"
                      filePattern="${logdir}/app_author/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
             <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
             <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
             <Policies>
                 <TimeBasedTriggeringPolicy/>
                 <SizeBasedTriggeringPolicy size="100 MB"/>
             </Policies>
         </RollingFile>
	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
     <loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
		<logger name="com.author" level="info"></logger>
        <!-- 打印等级：off、fatal、error、warn、info、debug、trace、all -->   
		<root level="info">
		    <appender-ref ref="Console"/>
		    <appender-ref ref="RollingFileInfo"/>
		    <appender-ref ref="RollingFileWarn"/>
		    <appender-ref ref="RollingFileError"/>
		</root>
     </loggers>
</configuration>